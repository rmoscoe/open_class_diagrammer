# Generated by Django 5.1.2 on 2024-11-11 20:25

import class_manager.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('class_manager', '0004_alter_class_options_alter_property_options_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='baseattribute',
            name='class_assoc',
            field=models.ForeignKey(help_text='The class that contains this attribute.', on_delete=django.db.models.deletion.CASCADE, to='class_manager.class'),
        ),
        migrations.AlterField(
            model_name='baseattribute',
            name='visibility',
            field=models.CharField(choices=class_manager.models.get_visibility_choices, help_text='Public (+): visible to any object that can view the class\n\nProtected (#): visible to objects that can view the class and are derived from the class\n\nPrivate (-): visibile only within the class and its instances', max_length=80),
        ),
        migrations.AlterField(
            model_name='class',
            name='module',
            field=models.ForeignKey(blank=True, help_text='The module to which this class belongs.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='class_manager.module'),
        ),
        migrations.AlterField(
            model_name='class',
            name='name',
            field=models.CharField(help_text='The name of the class.', max_length=160),
        ),
        migrations.AlterField(
            model_name='class',
            name='relationships',
            field=models.ManyToManyField(help_text='Related class(es).', through='class_manager.Relationship', to='class_manager.class'),
        ),
        migrations.AlterField(
            model_name='method',
            name='arguments',
            field=models.CharField(blank=True, help_text='A list of the inputs to the method.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='method',
            name='return_type',
            field=models.CharField(blank=True, help_text='The type of data output (returned) by the function.', max_length=160, null=True),
        ),
        migrations.AlterField(
            model_name='module',
            name='color',
            field=models.CharField(blank=True, default='#1d4ed8', help_text='The color of class diagrams in this module on UML diagrams.', max_length=7),
        ),
        migrations.AlterField(
            model_name='module',
            name='description',
            field=models.TextField(blank=True, help_text='A description of the module (optional).', null=True),
        ),
        migrations.AlterField(
            model_name='module',
            name='name',
            field=models.CharField(help_text='The name or title of the module.', max_length=160),
        ),
        migrations.AlterField(
            model_name='module',
            name='projects',
            field=models.ManyToManyField(help_text='A list of projects that include this module.', through='class_manager.ProjectModule', to='class_manager.project'),
        ),
        migrations.AlterField(
            model_name='project',
            name='description',
            field=models.TextField(blank=True, help_text='A description of the project (optional).', null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='name',
            field=models.CharField(help_text='The name or title of the project.', max_length=160),
        ),
        migrations.AlterField(
            model_name='property',
            name='data_type',
            field=models.CharField(blank=True, help_text='The data type (e.g., string, integer, Boolean, list, dictionary) of the property.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='relationship',
            name='from_class',
            field=models.ForeignKey(help_text='The class in which the relationship originates.', on_delete=django.db.models.deletion.CASCADE, related_name='from_class', to='class_manager.class'),
        ),
        migrations.AlterField(
            model_name='relationship',
            name='relationship_type',
            field=models.CharField(choices=class_manager.models.get_relationship_type_choices, help_text='The nature of the relationship between the classes (e.g., inheritance, composition, or cardinality, such as "one-to-one" or "one-to-many").', max_length=80),
        ),
        migrations.AlterField(
            model_name='relationship',
            name='to_class',
            field=models.ForeignKey(help_text='The class to which the From Class is related.', on_delete=django.db.models.deletion.CASCADE, related_name='to_class', to='class_manager.class'),
        ),
    ]
