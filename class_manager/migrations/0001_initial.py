# Generated by Django 5.1.2 on 2024-12-04 22:54

import class_manager.models
import colorfield.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of the class.', max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'classes',
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('visibility', models.CharField(blank=True, choices=class_manager.models.get_visibility_choices, help_text='Public (+): visible to any object that can view the class\n\nProtected (#): visible to objects that can view the class and are derived from the class\n\nPrivate (-): visibile only within the class and its instances', max_length=80, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('arguments', models.CharField(blank=True, help_text='A list of the inputs to the method.', max_length=255, null=True)),
                ('return_type', models.CharField(blank=True, help_text='The type of data output (returned) by the function.', max_length=160, null=True)),
                ('class_assoc', models.ForeignKey(help_text='The class that contains this attribute.', on_delete=django.db.models.deletion.CASCADE, to='class_manager.class')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name or title of the module.', max_length=160)),
                ('description', models.TextField(blank=True, help_text='A description of the module (optional).', null=True)),
                ('color', colorfield.fields.ColorField(blank=True, default='#1d4ed8', help_text='The color of class diagrams in this module on UML diagrams.', image_field=None, max_length=25, samples=[('#000000', 'Black'), ('#334155', 'Slate'), ('#44403c', 'Stone'), ('#854d0e', 'Brown'), ('#dc2626', 'Red'), ('#db2777', 'Pink'), ('#e11d48', 'Rose'), ('#ea580c', 'Orange'), ('#d97706', 'Amber'), ('#fcdb03', 'Yellow'), ('#65a30d', 'Lime'), ('#15803d', 'Green'), ('#0d9488', 'Teal'), ('#0284c7', 'Sky'), ('#1d4ed8', 'Blue'), ('#4338ca', 'Indigo'), ('#6d28d9', 'Violet'), ('#c026d3', 'Fuchsia'), ('#ffffff', 'White')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='class',
            name='module',
            field=models.ForeignKey(blank=True, help_text='The module to which this class belongs.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='class_manager.module'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name or title of the project.', max_length=160)),
                ('description', models.TextField(blank=True, help_text='A description of the project (optional).', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='class_manager.module')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='class_manager.project')),
            ],
        ),
        migrations.AddField(
            model_name='module',
            name='projects',
            field=models.ManyToManyField(help_text='A list of projects that include this module.', through='class_manager.ProjectModule', to='class_manager.project'),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('visibility', models.CharField(blank=True, choices=class_manager.models.get_visibility_choices, help_text='Public (+): visible to any object that can view the class\n\nProtected (#): visible to objects that can view the class and are derived from the class\n\nPrivate (-): visibile only within the class and its instances', max_length=80, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('data_type', models.CharField(blank=True, help_text='The data type (e.g., string, integer, Boolean, list, dictionary) of the property.', max_length=255, null=True)),
                ('class_assoc', models.ForeignKey(help_text='The class that contains this attribute.', on_delete=django.db.models.deletion.CASCADE, to='class_manager.class')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'properties',
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=class_manager.models.get_relationship_type_choices, help_text='The nature of the relationship between the classes (e.g., inheritance, composition, or cardinality, such as "one-to-one" or "one-to-many").', max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('from_class', models.ForeignKey(help_text='The class in which the relationship originates.', on_delete=django.db.models.deletion.CASCADE, related_name='from_class', to='class_manager.class')),
                ('to_class', models.ForeignKey(help_text='The class to which the From Class is related.', on_delete=django.db.models.deletion.CASCADE, related_name='to_class', to='class_manager.class')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='relationships',
            field=models.ManyToManyField(blank=True, help_text='Related class(es).', through='class_manager.Relationship', to='class_manager.class'),
        ),
        migrations.AddConstraint(
            model_name='projectmodule',
            constraint=models.UniqueConstraint(fields=('project', 'module'), name='unique_project_module'),
        ),
    ]
